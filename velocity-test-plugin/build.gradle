plugins {
    id 'java'
    id("xyz.jpenilla.run-velocity") version "2.3.1"
    id 'io.github.goooler.shadow' version '8.1.8'
}

group = 'fr.traqueur'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    implementation(project(":core"))
    implementation(project(":velocity"))
}

tasks {
  runVelocity {
    velocityVersion("3.4.0-SNAPSHOT")
  }
}

def targetJavaVersion = 21
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

build.dependsOn shadowJar

shadowJar {
    relocate "fr.traqueur.commands", "fr.traqueur.velocityTestPlugin.api.commands"
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

